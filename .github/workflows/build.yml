name: build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm-cache

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-15, ubuntu-latest]

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - if: startsWith(matrix.os, 'windows')
        uses: microsoft/setup-msbuild@v2
      - if: startsWith(matrix.os, 'windows')
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - uses: extractions/setup-just@v2
      - if: startsWith(matrix.os, 'windows')
        run: pip install meson ninja
      - if: startsWith(matrix.os, 'macos')
        name: Install macos dependencies
        run: brew install pkg-config glfw meson
      - if: startsWith(matrix.os, 'ubuntu')
        name: Install linux dependencies
        run: sudo apt-get update && sudo apt-get install -y pkg-config libglfw3-dev meson ninja-build
      - name: Trust git repo
        run: git config --global --add safe.directory '*'
      - name: Profiler GUI
        run: just build profiler
      - name: Update utility
        run: just build update
      - name: Capture utility
        run: just build capture
      - name: Csvexport utility
        run: just build csvexport
      - name: Import utilities
        run: just build import
      - if: ${{ !startsWith(matrix.os, 'windows') }}
        name: Library
        run: just library
      - name: Find Artifacts
        id: find_artifacts
        run: |
          just artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: bin
