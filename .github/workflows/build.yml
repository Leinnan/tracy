name: Build Tracy

on:
  workflow_call:
    inputs:
      runningSystem:
        description: "System to run the job on"
        required: true
        type: string
      testCompilation:
        description: "Whether to test compilation with different flags"
        required: true
        type: boolean
      webBuild:
        description: "Build web version"
        required: true
        type: boolean
  workflow_dispatch:
    inputs:
      runningSystem:
        description: "System to run the job on"
        required: true
        type: string
      testCompilation:
        description: "Whether to test compilation with different flags"
        required: true
        type: boolean
      webBuild:
        description: "Build web version"
        required: true
        type: boolean

env:
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm-cache

jobs:
  build:
    runs-on: ${{ inputs.runningSystem }}
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - if: startsWith(inputs.runningSystem, 'windows')
        uses: microsoft/setup-msbuild@v2
      - if: inputs.webBuild == true
        name: Setup emscripten
        uses: mymindstorm/setup-emsdk@v14
      - if: startsWith(inputs.runningSystem, 'windows')
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - if: startsWith(inputs.runningSystem, 'windows')
        run: pip install meson ninja
      - name: Cache CPM packages
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/cpm-cache
            ~/.cache/CPM
          key: ${{ runner.os }}-cpm-${{ hashFiles('**/vendor.cmake', '**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-cpm-
      - if: startsWith(inputs.runningSystem, 'macos')
        name: Install macos dependencies
        run: brew install pkg-config glfw meson
      - if: startsWith(inputs.runningSystem, 'ubuntu')
        name: Install linux dependencies
        run: sudo apt-get update && sudo apt-get install -y pkg-config libglfw3-dev meson ninja-build libdbus-1-dev libxkbcommon-dev libfreetype-dev libtbb-dev libwayland-dev libglvnd-dev zstd
      - name: Trust git repo
        run: git config --global --add safe.directory '*'
      - if: ${{ !startsWith(inputs.runningSystem, 'windows') && inputs.webBuild == false }}
        name: Library
        run: just library
      - name: Profiler GUI
        if: inputs.webBuild == false
        run: just build profiler
      - name: Update utility
        if: inputs.webBuild == false
        run: just build update
      - name: Capture utility
        if: inputs.webBuild == false
        run: just build capture
      - name: Csvexport utility
        if: inputs.webBuild == false
        run: just build csvexport
      - name: Import utilities
        if: inputs.webBuild == false
        run: just build import
      - if: inputs.testCompilation == true && inputs.webBuild == false
        name: Test compilation with different flags
        run: just compile_tests
      - name: Find Artifacts
        if: inputs.webBuild == false
        id: find_artifacts
        run: just copy_artifacts
      - if: startsWith(inputs.runningSystem, 'ubuntu') && inputs.webBuild == false
        name: Strip binaries
        run: just strip_binary
      - if: startsWith(inputs.runningSystem, 'macos') && inputs.webBuild == false
        name: Symlink
        run: just symlink
      - if: inputs.webBuild == true
        name: Web Build
        run: just web_build ${{ github.sha }}
      - if: inputs.webBuild == true
        name: Web Copy and Compress artifacts
        run: |
          just web_compress_artifacts
          just web_copy_artifacts
      - uses: actions/upload-artifact@v4
        if: inputs.webBuild == true
        with:
          name: emscripten
          path: bin
      - uses: actions/upload-artifact@v4
        if: inputs.webBuild == false
        with:
          name: ${{ inputs.runningSystem }}
          path: bin
